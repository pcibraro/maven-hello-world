pipeline { 
    agent any  
    tools {
        maven 'Maven'
        jdk 'JDK 1.8'
    }
    stages { 
        stage('Build') { 
            steps { 
               echo 'This is a minimal pipeline.' 
               
                    
               script {
                    def server = Artifactory.server 'local'
    
                    def maven = Artifactory.newMavenBuild()
    
                    maven.resolver server: server, releaseRepo: 'jcenter', snapshotRepo: 'jcenter'
    
                    maven.deployer server: server, releaseRepo: 'samples', snapshotRepo: 'samples'
    
                    maven.deployer.deployArtifacts = true
       
                    def buildInfo = maven.run pom: './my-app/pom.xml', goals: 'clean package'
               }

                
               

            }
        }
        stage('Vault') {
            steps {
                node ('linux') {
                        script {
                            def secrets = [
                                [$class: 'VaultSecret', path: 'secret/pablo', secretValues: [
                                    [$class: 'VaultSecretValue', envVar: 'testing', vaultKey: 'mykey']]]
                            ]

                            def configuration = [$class: 'VaultConfiguration',
                                vaultUrl: 'http://http://127.0.0.1:8200',
                                vaultCredentialId: 'vault']
                            
                            wrap([$class: 'VaultBuildWrapper', configuration: configuration, vaultSecrets: secrets]) {
                                sh 'echo $testing'
                            }
                        }
                    }
            }
        }
    }
    
}